spring.application.name=medical

# H2 Database Configuration
spring.datasource.h2.url=jdbc:h2:mem:testdb
spring.datasource.h2.driverClassName=org.h2.Driver
spring.datasource.h2.username=joker
spring.datasource.h2.password=joker1
spring.h2.console.enabled=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.show_sql=true

## Configure JSF with Spring Boot
spring.main.web-application-type=servlet
#
## JSF Configuration (if necessary)
#spring.faces.check-compatibility=true
#spring.faces.mapping-url-pattern=/faces/*
#spring.faces.resources-servlet-mapping=/resources/*




## JSF Settings
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.xhtml

#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML
#spring.thymeleaf.encoding=UTF-8



# Ajustes JSF
# Indicamos si el proyecto esta en modo desarrollo o produccion (development/production)
joinfaces.faces.project-stage=development
# Establece el nombre del servlet que manejará las peticiones
joinfaces.faces-servlet.name=FacesServlet
# Esta propiedad define los patrones de URL o las extensiones a leerse
joinfaces.faces-servlet.url-mappings=*.jsf,*.xhtml
# Define el estado de los datos en la vista si en "server" o "client".
joinfaces.faces.state-saving-method=server

